CREATE TYPE "Genre" AS ENUM (
  'Art',
  'Biography',
  'Business',
  'Children',
  'Christian',
  'Classics',
  'Comics',
  'Contemporary',
  'Cookbooks',
  'Crime',
  'Ebooks',
  'Fantasy',
  'Fiction',
  'Graphic_Novels',
  'Historical',
  'History',
  'Horror',
  'Comedy',
  'Manga',
  'Memoir',
  'Music',
  'Mystery',
  'Nonfiction',
  'Paranormal',
  'Philosophy',
  'Poetry',
  'Psychology',
  'Religion',
  'Romance',
  'Science',
  'Science_Fiction',
  'Self_Help',
  'Suspense',
  'Spirituality',
  'Sports',
  'Thriller',
  'Travel',
  'Young_Adult'
);

CREATE TYPE "Language" AS ENUM (
  'Afrikaans',
  'Arabic',
  'Bengali',
  'Bulgarian',
  'Catalan',
  'Cantonese',
  'Croatian',
  'Czech',
  'Danish',
  'Dutch',
  'Lithuanian',
  'Malay',
  'Malayalam',
  'Panjabi',
  'Tamil',
  'English',
  'Finnish',
  'French',
  'German',
  'Greek',
  'Hebrew',
  'Hindi',
  'Hungarian',
  'Indonesian',
  'Italian',
  'Japanese',
  'Javanese',
  'Korean',
  'Norwegian',
  'Polish',
  'Portuguese',
  'Romanian',
  'Russian',
  'Serbian',
  'Slovak',
  'Slovene',
  'Spanish',
  'Swedish',
  'Telugu',
  'Thai',
  'Turkish',
  'Ukrainian',
  'Vietnamese',
  'Welsh',
  'Sign',
  'Algerian',
  'Aramaic',
  'Armenian',
  'Berber',
  'Burmese',
  'Bosnian',
  'Brazilian',
  'Cypriot',
  'Corsica',
  'Creole',
  'Scottish',
  'Egyptian',
  'Esperanto',
  'Estonian',
  'Finn',
  'Flemish',
  'Georgian',
  'Hawaiian',
  'Inuit',
  'Irish',
  'Icelandic',
  'Latin',
  'Mandarin',
  'Nepalese',
  'Sanskrit',
  'Tagalog',
  'Tahitian',
  'Tibetan',
  'Gypsy',
  'Wu'
);

CREATE TYPE "Gender" AS ENUM (
  'male',
  'female'
);

CREATE TYPE "Length" AS ENUM (
  'short',
  'medium',
  'long',
  'very_long',
  'humongous'
);

CREATE TABLE "authors" (
  "id" integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "au_fname" varchar,
  "au_lname" varchar
);

CREATE TABLE "titles" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar(40),
  "pages" integer,
  "price" decimal(5,2),
  "pubdate" date,
  "isAvailable" boolean NOT NULL,
  "length" "Length"
);

CREATE TABLE "titles_authors" (
  "title_id" integer NOT NULL,
  "author_id" integer NOT NULL,
  PRIMARY KEY ("title_id", "author_id")
);

CREATE TABLE "genres" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" "Genre" NOT NULL
);

CREATE TABLE "titles_genres" (
  "title_id" integer NOT NULL,
  "genre_id" integer NOT NULL,
  PRIMARY KEY ("title_id", "genre_id")
);

CREATE TABLE "languages" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" "Language"
);

CREATE TABLE "titles_languages" (
  "title_id" integer NOT NULL,
  "language_id" integer NOT NULL,
  PRIMARY KEY ("title_id", "language_id")
);

CREATE TABLE "user" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "username" varchar UNIQUE NOT NULL,
  "fname" varchar,
  "lname" varchar,
  "age" int,
  "gender" "Gender"
);

CREATE TABLE "language_preferences" (
  "user_id" integer NOT NULL,
  "language_id" integer NOT NULL,
  PRIMARY KEY ("user_id", "language_id")
);

CREATE TABLE "genre_preferences" (
  "user_id" integer NOT NULL,
  "genre_id" integer NOT NULL,
  PRIMARY KEY ("user_id", "genre_id")
);

CREATE TABLE "author_preferences" (
  "user_id" integer NOT NULL,
  "author_id" integer NOT NULL,
  PRIMARY KEY ("user_id", "author_id")
);

CREATE TABLE "length_preferences" (
  "user_id" integer NOT NULL,
  "length_id" integer NOT NULL,
  PRIMARY KEY ("user_id", "length_id")
);

CREATE TABLE "lengths" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "length" "Length"
);

ALTER TABLE "titles_authors" ADD FOREIGN KEY ("author_id") REFERENCES "authors" ("id");

ALTER TABLE "titles_authors" ADD FOREIGN KEY ("title_id") REFERENCES "titles" ("id");

ALTER TABLE "titles_genres" ADD FOREIGN KEY ("title_id") REFERENCES "titles" ("id");

ALTER TABLE "titles_genres" ADD FOREIGN KEY ("genre_id") REFERENCES "genres" ("id");

ALTER TABLE "titles_languages" ADD FOREIGN KEY ("title_id") REFERENCES "titles" ("id");

ALTER TABLE "titles_languages" ADD FOREIGN KEY ("language_id") REFERENCES "languages" ("id");

ALTER TABLE "language_preferences" ADD FOREIGN KEY ("user_id") REFERENCES "user" ("id");

ALTER TABLE "language_preferences" ADD FOREIGN KEY ("language_id") REFERENCES "languages" ("id");

ALTER TABLE "genre_preferences" ADD FOREIGN KEY ("user_id") REFERENCES "user" ("id");

ALTER TABLE "genre_preferences" ADD FOREIGN KEY ("genre_id") REFERENCES "genres" ("id");

ALTER TABLE "author_preferences" ADD FOREIGN KEY ("user_id") REFERENCES "user" ("id");

ALTER TABLE "author_preferences" ADD FOREIGN KEY ("author_id") REFERENCES "authors" ("id");

ALTER TABLE "length_preferences" ADD FOREIGN KEY ("user_id") REFERENCES "user" ("id");

ALTER TABLE "length_preferences" ADD FOREIGN KEY ("length_id") REFERENCES "lengths" ("id");

CREATE OR REPLACE FUNCTION set_book_length() 
RETURNS TRIGGER AS $$
BEGIN
    -- Determine the length type based on the number of pages
    IF NEW.pages <= 150 THEN
        NEW."length" := 'short';
    ELSIF NEW.pages <= 300 THEN
        NEW."length" := 'medium';
    ELSIF NEW.pages <= 500 THEN
        NEW."length" := 'long';
    ELSIF NEW.pages <= 1000 THEN
        NEW."length" := 'very_long';
    ELSE
        NEW."length" := 'humongous';
    END IF;
    
    -- Return the modified record
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER set_length_before_insert_or_update
BEFORE INSERT OR UPDATE ON "titles"
FOR EACH ROW
EXECUTE FUNCTION set_book_length();


